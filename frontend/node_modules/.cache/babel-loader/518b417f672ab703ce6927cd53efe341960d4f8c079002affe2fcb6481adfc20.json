{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjiwon/-ReactJmt/frontend/src/Components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:3000/login', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        username: username,\n        password: password\n      }),\n      mode: 'cors'\n    });\n    if (response.ok) {\n      // 로그인 성공 시 토큰 받기\n      const data = await response.json();\n      const {\n        token\n      } = data;\n\n      // 토큰을 쿠키에 저장\n      document.cookie = `jwtToken=${token}; path=/`;\n\n      // 로그인 성공\n      console.log('로그인 성공');\n    } else {\n      // 로그인 실패\n      const data = await response.json();\n      setErrorMessage(data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"q37Po17WbhPwv8Y2XJ4Bs6FUZXE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","mode","ok","data","json","token","document","cookie","console","log","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","style","color","_c","$RefreshReg$"],"sources":["/Users/jeongjiwon/-ReactJmt/frontend/src/Components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Login: React.FC = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n            const response = await fetch('http://localhost:3000/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username: username, password: password }),\n                mode: 'cors'\n            });\n\n            if (response.ok) {\n                // 로그인 성공 시 토큰 받기\n                const data = await response.json();\n                const { token } = data;\n\n                // 토큰을 쿠키에 저장\n                document.cookie = `jwtToken=${token}; path=/`;\n\n                // 로그인 성공\n                console.log('로그인 성공');\n            } else {\n                // 로그인 실패\n                const data = await response.json();\n                setErrorMessage(data.message);\n            }\n\n    };\n\n    return (\n        <div>\n            <h2>로그인</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    <label htmlFor=\"username\">사용자 이름:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">비밀번호:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                {errorMessage && <div style={{ color: 'red' }}>{errorMessage}</div>}\n                <button type=\"submit\">로그인</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
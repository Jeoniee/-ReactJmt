{"ast":null,"code":"var _jsxFileName = \"/Users/jeongjiwon/-ReactJmt/frontend/src/Components/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const response = await fetch('http://localhost:3000/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username,\n          password\n        })\n      });\n      if (response.ok) {\n        // 로그인 성공\n        console.log('로그인 성공');\n      } else {\n        // 로그인 실패\n        const data = await response.json();\n        setErrorMessage(data.message);\n      }\n    } catch (error) {\n      console.error('네트워크 에러:', error);\n      setErrorMessage('네트워크 에러 발생');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"username\",\n          children: \"\\uC0AC\\uC6A9\\uC790 \\uC774\\uB984:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          value: username,\n          onChange: e => setUsername(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: 'red'\n        },\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"q37Po17WbhPwv8Y2XJ4Bs6FUZXE=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Login","_s","username","setUsername","password","setPassword","errorMessage","setErrorMessage","handleLogin","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","ok","console","log","data","json","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","value","onChange","target","style","color","_c","$RefreshReg$"],"sources":["/Users/jeongjiwon/-ReactJmt/frontend/src/Components/Login.tsx"],"sourcesContent":["import React, { useState } from 'react';\n\nconst Login: React.FC = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [errorMessage, setErrorMessage] = useState('');\n\n    const handleLogin = async (e: React.FormEvent) => {\n        e.preventDefault();\n\n        try {\n            const response = await fetch('http://localhost:3000/login', {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                body: JSON.stringify({ username, password })\n            });\n\n            if (response.ok) {\n                // 로그인 성공\n                console.log('로그인 성공');\n            } else {\n                // 로그인 실패\n                const data = await response.json();\n                setErrorMessage(data.message);\n            }\n        } catch (error) {\n            console.error('네트워크 에러:', error);\n            setErrorMessage('네트워크 에러 발생');\n        }\n    };\n\n    return (\n        <div>\n            <h2>로그인</h2>\n            <form onSubmit={handleLogin}>\n                <div>\n                    <label htmlFor=\"username\">사용자 이름:</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                </div>\n                <div>\n                    <label htmlFor=\"password\">비밀번호:</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={password}\n                        onChange={(e) => setPassword(e.target.value)}\n                    />\n                </div>\n                {errorMessage && <div style={{ color: 'red' }}>{errorMessage}</div>}\n                <button type=\"submit\">로그인</button>\n            </form>\n        </div>\n    );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}